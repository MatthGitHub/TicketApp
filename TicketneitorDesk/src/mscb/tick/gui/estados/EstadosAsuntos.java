/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mscb.tick.gui.estados;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import mscb.tick.negocio.AsuntoPrincipalServ;
import mscb.tick.negocio.EstadoServ;
import mscb.tick.negocio.LoginEJB;
import mscb.tick.negocio.entidades.Asuntos;
import mscb.tick.negocio.entidades.Estados;
import mscb.tick.util.MenuP;

/**
 *
 * @author Administrador
 */
public class EstadosAsuntos extends MenuP {
    private DefaultTableModel modelo;
    private static EstadosAsuntos estePanel;
    /**
     * Creates new form EstadosAsuntos
     */
    private EstadosAsuntos() {
        initComponents();
        modelo = (DefaultTableModel) jt_estados.getModel();
        setVisible(true);
        llenarComboBox();
        
    }
    
    public static EstadosAsuntos getEstadosAsuntos(){
        if(estePanel == null){
            estePanel = new EstadosAsuntos();
        }
        return estePanel;
    }
    
    public void llenarComboBox(){
        List<Asuntos> miLista = AsuntoPrincipalServ.getAsuntoPrincipalServ().asuntosPorArea(LoginEJB.usuario.getFkEmpleado().getFkArea());
        for(int i = 0; i < miLista.size(); i++){
            cmbx_asunto.addItem(miLista.get(i));
        }
    }
    
    public void llenarTabla(){
        vaciarTabla(jt_estados);
        Asuntos asunto = (Asuntos) cmbx_asunto.getSelectedItem();
        List<Estados> miLista = EstadoServ.getEstadoServ().getEstadosPorAsunto(asunto.getIdasuntoP());
        
        String v[] = new String[1];
        
        for(int i = 0; i < miLista.size(); i++){
            v[0] = miLista.get(i).getNombre();
            modelo.addRow(v);
        }
    }
    
    private void vaciarTabla(JTable tabla) {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
            int filas = tabla.getRowCount();
            for (int i = 0; filas > i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbx_asunto = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jt_estados = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txt_estado = new javax.swing.JTextField();
        btn_guardar = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estados de asuntos", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N

        cmbx_asunto.setBackground(new java.awt.Color(153, 153, 153));
        cmbx_asunto.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        cmbx_asunto.setForeground(new java.awt.Color(0, 108, 118));
        cmbx_asunto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbx_asuntoActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 102, 204));
        jLabel6.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 108, 118));
        jLabel6.setText("Asunto:");

        jt_estados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Estados"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jt_estados);
        if (jt_estados.getColumnModel().getColumnCount() > 0) {
            jt_estados.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel7.setBackground(new java.awt.Color(0, 102, 204));
        jLabel7.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 108, 118));
        jLabel7.setText("Nuevo estado:");

        txt_estado.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        txt_estado.setForeground(new java.awt.Color(0, 108, 118));

        btn_guardar.setBackground(new java.awt.Color(153, 153, 153));
        btn_guardar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btn_guardar.setForeground(new java.awt.Color(0, 108, 118));
        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mscb/tick/resources/imagenes/icons/save.png"))); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_guardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbx_asunto, 0, 584, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_estado, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbx_asunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbx_asuntoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbx_asuntoActionPerformed
        // TODO add your handling code here:
        llenarTabla();
    }//GEN-LAST:event_cmbx_asuntoActionPerformed

    private void btn_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_guardarActionPerformed
        // TODO add your handling code here:
        if(txt_estado.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(this, "Debe escribir un estado");
        }else{
            Estados estado = new Estados();
            estado.setGeneral(false);
            estado.setNombre(txt_estado.getText());
            if(EstadoServ.getEstadoServ().nuevoEstadoPorArea(estado,(Asuntos)cmbx_asunto.getSelectedItem())){
                llenarTabla();
                txt_estado.setText("");
                
            }else{
                JOptionPane.showMessageDialog(this, "Error al crear estado");
            }
            
        }
    }//GEN-LAST:event_btn_guardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_guardar;
    private javax.swing.JComboBox cmbx_asunto;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jt_estados;
    private javax.swing.JTextField txt_estado;
    // End of variables declaration//GEN-END:variables
}
