/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mscb.tick.gui.servicios;

import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import mscb.tick.negocio.AsuntoPrincipalServ;
import mscb.tick.negocio.AsuntoSecundarioServ;
import mscb.tick.negocio.entidades.Asuntos;
import mscb.tick.negocio.entidades.Servicios;
import mscb.tick.gui.main.Main;
import mscb.tick.util.MenuP;

/**
 *
 * @author Administrador
 */
public class AsuntoSec extends MenuP {
    Main mainFrame;
    private static AsuntoSec asuntoSec;
    private AsuntoSecundarioServ serviciosASec;
    private AsuntoPrincipalServ serviciosA;
    private List<Asuntos> misAsuntosP;
    private List<Servicios> misAsuntoSS;
    private DefaultTableModel modelo;
    private String opt;
    private Asuntos obj;
    /**
     * Creates new form AsuntoSec
     */
    private AsuntoSec(Main mainFrame) {
        initComponents();
        this.mainFrame = mainFrame;
        setSize(800, 600);
        setVisible(true);
        llenarComboBox();
        validarPermisos();
    }
    
    public static AsuntoSec getAsuntoSec(Main mainFrame){
        if(asuntoSec == null){
            asuntoSec = new AsuntoSec(mainFrame);
        }
        return asuntoSec;
    }
    
    private void validarPermisos(){
        //boton eliminar
        if(mainFrame.validarPermisos(22)){
            btn_eliminar.setEnabled(true);
            btn_eliminar.setVisible(true);
        }else{
            btn_eliminar.setEnabled(false);
            btn_eliminar.setVisible(false); 
        }
        //boton nuevo
        if(mainFrame.validarPermisos(23)){
            btn_nuevo.setEnabled(true);
            btn_nuevo.setVisible(true);
        }else{
            btn_nuevo.setEnabled(false);
            btn_nuevo.setVisible(false); 
        }
    }
    
    private void llenarComboBox(){
        vaciarTabla(jt_asuntoSec);
        serviciosA = AsuntoPrincipalServ.getAsuntoPrincipalServ();
        misAsuntosP = serviciosA.traerTodos();
        
        for(int i = 0 ; i < misAsuntosP.size() ; i ++){
            cmbx_asuntos.addItem(misAsuntosP.get(i));
        }
    }
    
    
    
    
    
    private void eliminarAsunto(int id){
        misAsuntoSS.remove(serviciosASec.traerUno(id));
        if(serviciosASec.eliminar(id)){
            JOptionPane.showMessageDialog(this, "Registro eliminado");
        }else{
            JOptionPane.showMessageDialog(this, "Error al eliminar registro");
        }
    }
    
    public void llenarTabla(List<Servicios> aCargar){
        vaciarTabla(jt_asuntoSec);
        String[] v = new String[3];
        modelo = (DefaultTableModel) jt_asuntoSec.getModel();
        
        for(int i = 0; i < aCargar.size(); i++){
            v[0] = aCargar.get(i).getIdasuntoS().toString();
            v[1] = aCargar.get(i).getNombreasuntoS();
            v[2] = aCargar.get(i).getPertenece().getNombre();
            modelo.addRow(v);
            revalidate();
        }
        
    }
    
    private void vaciarTabla(JTable tabla) {
        try {
            DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
            int filas = tabla.getRowCount();
            for (int i = 0; filas > i; i++) {
                modelo.removeRow(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al limpiar la tabla.");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jt_asuntoSec = new javax.swing.JTable();
        cmbx_asuntos = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        btn_volver = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Servicios", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("SansSerif", 0, 18), java.awt.Color.white)); // NOI18N

        jt_asuntoSec.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        jt_asuntoSec.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Asunto Principal"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jt_asuntoSec.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jt_asuntoSecKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jt_asuntoSec);
        if (jt_asuntoSec.getColumnModel().getColumnCount() > 0) {
            jt_asuntoSec.getColumnModel().getColumn(0).setMinWidth(50);
            jt_asuntoSec.getColumnModel().getColumn(0).setPreferredWidth(50);
            jt_asuntoSec.getColumnModel().getColumn(0).setMaxWidth(50);
        }

        cmbx_asuntos.setBackground(new java.awt.Color(153, 153, 153));
        cmbx_asuntos.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        cmbx_asuntos.setForeground(new java.awt.Color(0, 108, 118));
        cmbx_asuntos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-", "Todos" }));
        cmbx_asuntos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbx_asuntosActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(0, 102, 204));
        jLabel1.setFont(new java.awt.Font("SansSerif", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 108, 118));
        jLabel1.setText("Eliga un asunto principal:");

        btn_volver.setBackground(new java.awt.Color(153, 153, 153));
        btn_volver.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btn_volver.setForeground(new java.awt.Color(0, 108, 118));
        btn_volver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mscb/tick/resources/imagenes/icons/back-arrow.png"))); // NOI18N
        btn_volver.setText("Volver");
        btn_volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_volverActionPerformed(evt);
            }
        });

        btn_eliminar.setBackground(new java.awt.Color(153, 153, 153));
        btn_eliminar.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        btn_eliminar.setForeground(new java.awt.Color(0, 108, 118));
        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mscb/tick/resources/imagenes/icons/delete.png"))); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });

        btn_nuevo.setBackground(new java.awt.Color(153, 153, 153));
        btn_nuevo.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        btn_nuevo.setForeground(new java.awt.Color(0, 108, 118));
        btn_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mscb/tick/resources/imagenes/icons/add.png"))); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 768, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbx_asuntos, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btn_volver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_nuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_eliminar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbx_asuntos))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_eliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_volver, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmbx_asuntosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbx_asuntosActionPerformed
        // TODO add your handling code here:
        serviciosASec = AsuntoSecundarioServ.getAsuntoPrincipalServ();
        opt = null;
        obj = null;
        if((cmbx_asuntos.getSelectedIndex() == 0)||(cmbx_asuntos.getSelectedIndex() == 1)){
            opt = (String) cmbx_asuntos.getSelectedItem();
        }else{
            obj = (Asuntos) cmbx_asuntos.getSelectedItem();
        }
        
        if(opt != null){
            switch(opt){
                case "Todos":
                    misAsuntoSS = serviciosASec.traerTodos();
                    break;
                case "":
                    vaciarTabla(jt_asuntoSec);
                    revalidate();
                    break;
            }
        }
        if(obj != null){
            misAsuntoSS = serviciosASec.traerPorAreaPrincipal(obj);
        }
        llenarTabla(misAsuntoSS);
    }//GEN-LAST:event_cmbx_asuntosActionPerformed

    private void btn_volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_volverActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        mainFrame.menuPrincipal();
        asuntoSec = null;
        System.gc();
    }//GEN-LAST:event_btn_volverActionPerformed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        // TODO add your handling code here:
        if((jt_asuntoSec.getSelectedRow() != -1)&&(jt_asuntoSec.getSelectedRowCount() == 1)){
            if(JOptionPane.showConfirmDialog(this, "Seguro desea eliminar?", "Confirmar", JOptionPane.YES_NO_OPTION) == 0){
                eliminarAsunto(Integer.parseInt(jt_asuntoSec.getValueAt(jt_asuntoSec.getSelectedRow(), 0).toString()));
                llenarTabla(serviciosASec.traerPorAreaPrincipal(obj));
            }
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar una y solo una fila!");
        }
    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        // TODO add your handling code here:
        if(obj != null){
            mainFrame.nuevoAsuntoSecundario(obj);
        }else{
            JOptionPane.showMessageDialog(this, "Debe seleccionar un asunto principal!");
        }
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void jt_asuntoSecKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jt_asuntoSecKeyPressed
        // TODO add your handling code here:
        if(evt.getSource() == jt_asuntoSec){
            if(evt.getKeyCode() == KeyEvent.VK_DELETE){
                if((jt_asuntoSec.getSelectedRow() != -1)&&(jt_asuntoSec.getSelectedRowCount() == 1)){
                    if(JOptionPane.showConfirmDialog(this, "Seguro desea eliminar?", "Confirmar", JOptionPane.YES_NO_OPTION) == 0){
                        eliminarAsunto(Integer.parseInt(jt_asuntoSec.getValueAt(jt_asuntoSec.getSelectedRow(), 0).toString()));
                        llenarTabla(serviciosASec.traerPorAreaPrincipal(obj));
                    }
                }else{
                    JOptionPane.showMessageDialog(this, "Debe seleccionar una y solo una fila!");
                }
            }
        }
    }//GEN-LAST:event_jt_asuntoSecKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton btn_volver;
    private javax.swing.JComboBox cmbx_asuntos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jt_asuntoSec;
    // End of variables declaration//GEN-END:variables
}
